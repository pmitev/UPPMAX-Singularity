Bootstrap: docker
From: ubuntu:20.04

%files
  MACS2-2.2.7.1.tar.gz /

%environment
  export PYTHONNOUSERSITE=True
  export PATH=/usr/lib/rstudio/bin:${PATH}
  export LANG=C.UTF-8 LC_ALL=C.UTF-8
  export XDG_RUNTIME_DIR=/tmp/.run_$(uuidgen)
 
%post
  export DEBIAN_FRONTEND=noninteractive
  export LC_ALL=C
  export NCPU=$(grep -c ^processor /proc/cpuinfo)

  mkdir -p /tmp/apt20
  echo "Dir::Cache "/tmp/apt20";" > /etc/apt/apt.conf.d/singularity-cache.conf

  
  apt-get update && \
  apt-get -y --no-install-recommends install --fix-missing \
        less vim nano wget curl build-essential automake \
        libcurl4-openssl-dev libssl-dev	libbz2-dev liblzma-dev libxml2-dev libcairo2-dev libsqlite3-dev libmariadbd-dev \
        libnss3 libxdamage1 libasound2 libatk1.0-0 libatk-bridge2.0-0 libdrm2 libgtk-3-0 libxrandr2 libx11-dev libxt-dev \
        libgbm1 qmmp libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libgsl-dev libgit2-dev \
        liblapack-dev libopenblas-dev gfortran libssl1.1 \
        python3-pip python3-dev python3-venv python3-numpy cython3 uuid-runtime

  mkdir /installs && cd /installs

  
  # MACS2
  mv /MACS2-2.2.7.1.tar.gz .
  #python3 -m pip install --no-cache-dir -U pip setuptools wheel
  python3 -m pip install MACS2-2.2.7.1.tar.gz
 

  # R-CRAN
  apt-get -y  install --no-install-recommends software-properties-common dirmngr
  wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
  add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
  apt-get update && apt-get -y  install --no-install-recommends r-base

  # Add a default CRAN mirror
  echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

  # Add a directory for host R libraries
  mkdir -p /library
  echo "R_LIBS_SITE=/library:\${R_LIBS_SITE}" >> /usr/lib/R/etc/Renviron.site

cat << EOF > /installs/install.R
  if (!requireNamespace("devtools", quietly = TRUE)) install.packages("devtools")
  if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
  library(devtools)
  devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
  library(ArchR)
  ArchR::installExtraPackages()

  remove.packages("ggplot2")
  devtools::install_version("ggplot2", version="3.3.6")
EOF

  R -f /installs/install.R

  # Rstudio desktop 
  wget -P /tmp/ -c https://download1.rstudio.org/electron/bionic/amd64/rstudio-2022.12.0-353-amd64.deb
  apt-get -y install /tmp/rstudio-2022.12.0-353-amd64.deb

  
  # Fix for:
  # The SUID sandbox helper binary was found, but is not configured correctly. 
  # Rather than run without sandboxing Im aborting now. 
  # You need to make sure that /usr/lib/rstudio/chrome-sandbox is owned by root and has mode 4755.

  # chmod 4755 /usr/lib/rstudio/chrome-sandbox

  # Clean
  rm /etc/apt/apt.conf.d/singularity-cache.conf
  rm -rf /installs

%runscript
  export XDG_RUNTIME_DIR=/tmp/.run_$(uuidgen)
  mkdir -p $XDG_RUNTIME_DIR
  exec rstudio --no-sandbox "$@"
